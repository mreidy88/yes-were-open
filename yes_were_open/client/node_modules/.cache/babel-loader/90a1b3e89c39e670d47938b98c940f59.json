{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3000';\nconst api = axios.create({\n  baseURL: baseUrl\n});\nexport const loginUser = async loginData => {\n  const resp = await api.post('/auth/login', {\n    auth: loginData\n  });\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  return resp.data.user;\n};\nexport const registerUser = async registerData => {\n  const resp = await api.post('/users/', {\n    user: registerData\n  });\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n  return resp.data.user;\n};\nexport const verifyUser = async () => {\n  const token = localStorage.getItem('authToken');\n\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n    const resp = await api.get('/auth/verify');\n    return resp.data;\n  }\n\n  return false;\n};\nexport const removeToken = () => {\n  api.defaults.headers.common.authorization = null;\n};\nexport const createUser = async data => {\n  const resp = await api.post('/users', {\n    user: data\n  });\n  return resp.data;\n};\nexport const readAllUsers = async () => {\n  const resp = await api.get('/users');\n  return resp.data;\n};\nexport const updateUser = async (id, data) => {\n  const resp = await api.put(`/users/${id}`, {\n    teacher: data\n  });\n  return resp.data;\n};\nexport const destroyUser = async id => {\n  const resp = await api.delete(`/users/${id}`);\n  return resp.data;\n};","map":{"version":3,"sources":["/Users/mikereidy/supernovas/unit_4/project_4/yes-were-open/yes_were_open/client/src/services/api-helper.js"],"names":["axios","baseUrl","api","create","baseURL","loginUser","loginData","resp","post","auth","localStorage","setItem","data","token","defaults","headers","common","authorization","user","registerUser","registerData","verifyUser","getItem","get","removeToken","createUser","readAllUsers","updateUser","id","put","teacher","destroyUser","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEH;AADc,CAAb,CAAZ;AAIA,OAAO,MAAMI,SAAS,GAAG,MAAOC,SAAP,IAAqB;AAC5C,QAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwB;AAAEC,IAAAA,IAAI,EAAEH;AAAR,GAAxB,CAAnB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,IAAL,CAAUC,KAA5C;AACAX,EAAAA,GAAG,CAACY,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASV,IAAI,CAACK,IAAL,CAAUC,KAAM,EAAtE;AACA,SAAON,IAAI,CAACK,IAAL,CAAUM,IAAjB;AACD,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAOC,YAAP,IAAwB;AAClD,QAAMb,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,SAAT,EAAoB;AAAEU,IAAAA,IAAI,EAAEE;AAAR,GAApB,CAAnB;AACAV,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,IAAL,CAAUC,KAA5C;AACAX,EAAAA,GAAG,CAACY,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASV,IAAI,CAACK,IAAL,CAAUC,KAAM,EAAtE;AACA,SAAON,IAAI,CAACK,IAAL,CAAUM,IAAjB;AACD,CALM;AAOP,OAAO,MAAMG,UAAU,GAAG,YAAY;AACpC,QAAMR,KAAK,GAAGH,YAAY,CAACY,OAAb,CAAqB,WAArB,CAAd;;AACA,MAAIT,KAAJ,EAAW;AACTX,IAAAA,GAAG,CAACY,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASJ,KAAM,EAA5D;AACA,UAAMN,IAAI,GAAG,MAAML,GAAG,CAACqB,GAAJ,CAAQ,cAAR,CAAnB;AACA,WAAOhB,IAAI,CAACK,IAAZ;AACD;;AACD,SAAO,KAAP;AACD,CARM;AAUP,OAAO,MAAMY,WAAW,GAAG,MAAM;AAC/BtB,EAAAA,GAAG,CAACY,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA4C,IAA5C;AACD,CAFM;AAIP,OAAO,MAAMQ,UAAU,GAAG,MAAOb,IAAP,IAAgB;AACxC,QAAML,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,QAAT,EAAmB;AAAEU,IAAAA,IAAI,EAAEN;AAAR,GAAnB,CAAnB;AACA,SAAOL,IAAI,CAACK,IAAZ;AACD,CAHM;AAKP,OAAO,MAAMc,YAAY,GAAG,YAAY;AACtC,QAAMnB,IAAI,GAAG,MAAML,GAAG,CAACqB,GAAJ,CAAQ,QAAR,CAAnB;AACA,SAAOhB,IAAI,CAACK,IAAZ;AACD,CAHM;AAKP,OAAO,MAAMe,UAAU,GAAG,OAAOC,EAAP,EAAWhB,IAAX,KAAoB;AAC5C,QAAML,IAAI,GAAG,MAAML,GAAG,CAAC2B,GAAJ,CAAS,UAASD,EAAG,EAArB,EAAwB;AAAEE,IAAAA,OAAO,EAAElB;AAAX,GAAxB,CAAnB;AACA,SAAOL,IAAI,CAACK,IAAZ;AACD,CAHM;AAKP,OAAO,MAAMmB,WAAW,GAAG,MAAOH,EAAP,IAAc;AACvC,QAAMrB,IAAI,GAAG,MAAML,GAAG,CAAC8B,MAAJ,CAAY,UAASJ,EAAG,EAAxB,CAAnB;AACA,SAAOrB,IAAI,CAACK,IAAZ;AACD,CAHM","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://localhost:3000'\n\nconst api = axios.create({\n  baseURL: baseUrl\n})\n\nexport const loginUser = async (loginData) => {\n  const resp = await api.post('/auth/login', { auth: loginData })\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n  return resp.data.user\n}\n\nexport const registerUser = async (registerData) => {\n  const resp = await api.post('/users/', { user: registerData })\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n  return resp.data.user\n}\n\nexport const verifyUser = async () => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`\n    const resp = await api.get('/auth/verify');\n    return resp.data\n  }\n  return false\n}\n\nexport const removeToken = () => {\n  api.defaults.headers.common.authorization = null;\n}\n\nexport const createUser = async (data) => {\n  const resp = await api.post('/users', { user: data })\n  return resp.data\n}\n\nexport const readAllUsers = async () => {\n  const resp = await api.get('/users')\n  return resp.data\n}\n\nexport const updateUser = async (id, data) => {\n  const resp = await api.put(`/users/${id}`, { teacher: data })\n  return resp.data\n}\n\nexport const destroyUser = async (id) => {\n  const resp = await api.delete(`/users/${id}`)\n  return resp.data\n}"]},"metadata":{},"sourceType":"module"}